{"remainingRequest":"/Users/cliff/Documents/kioku/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cliff/Documents/kioku/client/src/components/Test.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cliff/Documents/kioku/client/src/components/Test.vue","mtime":1569556584041},{"path":"/Users/cliff/Documents/kioku/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cliff/Documents/kioku/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/cliff/Documents/kioku/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cliff/Documents/kioku/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios';\n\n  export default {\n    data() {\n      return {\n        form: {\n          word: '',\n        },\n        show: true\n      }\n    },\n    methods: {\n      onSubmit(evt) {\n        evt.preventDefault()\n        alert(JSON.stringify(this.form))\n        const path = 'http://localhost:5000/test';\n        axios.post(post, {test:'hi'})\n          .then((res) => {\n            console.log(res);\n          })\n          .catch((error) => {\n            console.error(error);\n          })\n      },\n      onReset(evt) {\n        evt.preventDefault()\n        // Reset our form values\n        this.form.email = ''\n        this.form.name = ''\n        this.form.food = null\n        this.form.checked = []\n        // Trick to reset/clear native browser form validation state\n        this.show = false\n        this.$nextTick(() => {\n          this.show = true\n        })\n      }\n    }\n  }\n",{"version":3,"sources":["Test.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Test.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <b-form @submit=\"onSubmit\" @reset=\"onReset\" v-if=\"show\">\n      <b-form-group\n        id=\"input-group-1\"\n        label=\"Input a word:\"\n        label-for=\"input-1\"\n        description=\"All characters are reusable.\"\n      >\n        <b-form-input\n          id=\"input-1\"\n          v-model=\"form.word\"\n          type=\"word\"\n          required\n          placeholder=\"Enter word\"\n        ></b-form-input>\n      </b-form-group>\n\n      <b-button type=\"submit\" variant=\"primary\">Submit</b-button>\n      <b-button type=\"reset\" variant=\"danger\">Reset</b-button>\n    </b-form>\n\n    <b-card class=\"mt-3\" header=\"Form Data Result\">\n      <pre class=\"m-0\">{{ form }}</pre>\n    </b-card>\n\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\n  export default {\n    data() {\n      return {\n        form: {\n          word: '',\n        },\n        show: true\n      }\n    },\n    methods: {\n      onSubmit(evt) {\n        evt.preventDefault()\n        alert(JSON.stringify(this.form))\n        const path = 'http://localhost:5000/test';\n        axios.post(post, {test:'hi'})\n          .then((res) => {\n            console.log(res);\n          })\n          .catch((error) => {\n            console.error(error);\n          })\n      },\n      onReset(evt) {\n        evt.preventDefault()\n        // Reset our form values\n        this.form.email = ''\n        this.form.name = ''\n        this.form.food = null\n        this.form.checked = []\n        // Trick to reset/clear native browser form validation state\n        this.show = false\n        this.$nextTick(() => {\n          this.show = true\n        })\n      }\n    }\n  }\n</script>\n"]}]}