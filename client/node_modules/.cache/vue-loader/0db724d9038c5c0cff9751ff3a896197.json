{"remainingRequest":"/Users/cliff/Documents/kioku/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cliff/Documents/kioku/client/src/components/Test.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cliff/Documents/kioku/client/src/components/Test.vue","mtime":1569819969999},{"path":"/Users/cliff/Documents/kioku/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cliff/Documents/kioku/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/cliff/Documents/kioku/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cliff/Documents/kioku/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      form: {\n        word: '',\n        hidden: '',\n      },\n      show: true,\n      moras: '',\n      dictionary_output: '',\n      used: [],\n      lives: 3,\n      msg: '',\n      cur_score: 0,\n      max_score: 0,\n    };\n  },\n  methods: {\n    getMoras() {\n      const path = 'http://localhost:5000/test';\n      axios.get(path)\n        .then((res) => {\n          this.moras = res.data.moras;\n          this.form.hidden = res.data.hidden;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    pipeWord(payload) {\n      const path = 'http://localhost:5000/check';\n      axios.get(path, { params: payload })\n        .then((res) => {\n          this.dictionary_output = res.data;\n          const check = this.used;\n          const check_word = this.form.word;\n          if (this.dictionary_output == \"Not a word\")\n          {\n            this.msg = 'This is not a word!';\n            this.lives -= 1;\n          }\n          if (check.includes(check_word))\n          {\n            this.msg = 'You have already tried using ' + check_word; \n            this.lives -= 1;\n          }\n          else\n          {\n          this.msg = 'Correct!';\n          this.max_score += 1;\n          this.used.push(this.form.word);\n          this.resetForm();\n          }\n        });\n    },\n    onSubmit(evt) {\n      evt.preventDefault();\n      const payload = this.form;\n      this.pipeWord(payload);\n    },\n    resetForm() {\n      this.form.word = '';\n      this.msg = '';\n    }\n  },\n  created() {\n    this.getMoras();\n  },\n};\n",{"version":3,"sources":["Test.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Test.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <b-container>\n      <b-row class=\"text-center\">\n        <b-col> <h3>Score: {{max_score}} </h3></b-col>\n        <b-col> <h1> {{moras}} </h1></b-col>\n        <b-col> <h3>Lives: {{ lives }} </h3></b-col>\n      </b-row>\n      <b-row class=\"text-center\">\n        <b-col><h2>{{msg}}</h2></b-col>\n      </b-row>\n      <b-row class=\"text-center\">\n        <b-col><h4>{{dictionary_output}}</h4></b-col>\n      </b-row>\n      <b-row>\n        <b-col>\n          <b-form @submit=\"onSubmit\" v-if=\"show\">\n            <b-form-group\n              id=\"input-group-1\"\n              label=\"Word:\"\n              label-for=\"input-1\"\n            >\n              <b-form-input\n                id=\"input-1\"\n                v-model=\"form.word\"\n                type=\"word\"\n                placeholder=\"Enter word\"\n              ></b-form-input>\n            </b-form-group>\n            <b-button type=\"submit\" variant=\"primary\">Submit</b-button>\n          </b-form>\n          </b-col>\n        <b-col>\n          <p> {{used}} </p>\n        </b-col>\n      </b-row>\n    </b-container>\n    <b-card class=\"mt-3\" header=\"Form Data Result\">\n      <pre class=\"m-0\">{{ form }}</pre>\n    </b-card>\n    <p> {{used}} </p>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      form: {\n        word: '',\n        hidden: '',\n      },\n      show: true,\n      moras: '',\n      dictionary_output: '',\n      used: [],\n      lives: 3,\n      msg: '',\n      cur_score: 0,\n      max_score: 0,\n    };\n  },\n  methods: {\n    getMoras() {\n      const path = 'http://localhost:5000/test';\n      axios.get(path)\n        .then((res) => {\n          this.moras = res.data.moras;\n          this.form.hidden = res.data.hidden;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    pipeWord(payload) {\n      const path = 'http://localhost:5000/check';\n      axios.get(path, { params: payload })\n        .then((res) => {\n          this.dictionary_output = res.data;\n          const check = this.used;\n          const check_word = this.form.word;\n          if (this.dictionary_output == \"Not a word\")\n          {\n            this.msg = 'This is not a word!';\n            this.lives -= 1;\n          }\n          if (check.includes(check_word))\n          {\n            this.msg = 'You have already tried using ' + check_word; \n            this.lives -= 1;\n          }\n          else\n          {\n          this.msg = 'Correct!';\n          this.max_score += 1;\n          this.used.push(this.form.word);\n          this.resetForm();\n          }\n        });\n    },\n    onSubmit(evt) {\n      evt.preventDefault();\n      const payload = this.form;\n      this.pipeWord(payload);\n    },\n    resetForm() {\n      this.form.word = '';\n      this.msg = '';\n    }\n  },\n  created() {\n    this.getMoras();\n  },\n};\n</script>\n"]}]}